// Generated by CoffeeScript 2.4.1
(function() {
  toastr.options = {
    "closeButton": true,
    "debug": false,
    "newestOnTop": true,
    "progressBar": false,
    "positionClass": "toast-top-center",
    "preventDuplicates": true,
    "onclick": null,
    "showDuration": "300",
    "hideDuration": "1000",
    "timeOut": "3000",
    "extendedTimeOut": "1000",
    "showEasing": "swing",
    "hideEasing": "linear",
    "showMethod": "fadeIn",
    "hideMethod": "fadeOut"
  };

  $(function() {
    $('form').submit(function() {
      return false;
    });
  });

  netuno.menuDev = function(menu) {
    var buildMenu, containers, containersHtml, navMenuHtml, navbarNav;
    navbarNav = $('.navbar-nav');
    navbarNav.find('[netuno-menu-form-section]').remove();
    navbarNav.find('[netuno-menu-report-section]').remove();
    navbarNav.find('[netuno-menu-form-item]').remove();
    navbarNav.find('[netuno-menu-report-item]').remove();
    containers = $('#containers');
    containers.find('[netuno-form]').remove();
    containers.find('[netuno-report]').remove();
    navMenuHtml = '';
    containersHtml = '';
    buildMenu = function(type, parentUId, items, level) {
      var expand, i, item, len, menuHtml;
      menuHtml = '';
      if (level > 0) {
        menuHtml += "<ul>";
      }
      for (i = 0, len = items.length; i < len; i++) {
        item = items[i];
        expand = "";
        if (item.items.length > 0) {
          expand = " data-toggle";
        }
        menuHtml += `<li netuno-menu-${type}-item>`;
        menuHtml += `<a href="\#" netuno-dev-${type}="${item.name}"${expand}>`;
        menuHtml += `${item.text}`;
        if (item.items.length > 0) {
          menuHtml += "<i class=\"fa fa-fw fa-caret-down\"></i>";
        }
        menuHtml += "</a>";
        if (item.items.length > 0) {
          menuHtml += buildMenu(type, item.uid, item.items, level + 1);
        }
        menuHtml += '</li>';
        containersHtml += `<div id="netuno_${type}_design_${item.name}" netuno-${type} netuno-${type}-uid="${item.uid}" netuno-${type}-name="${item.name}">`;
        containersHtml += "</div>";
      }
      if (level > 0) {
        menuHtml += '</ul>';
      }
      return menuHtml;
    };
    if (menu.forms.length > 0) {
      navMenuHtml += `<li netuno-menu-form-section class="nav-section-title"><h4>&nbsp;<i class="fa fa-fw fa-edit"></i>${netuno.lang['menu.forms']}</h4></li>`;
      navMenuHtml += buildMenu('form', 0, menu.forms, 0);
    }
    if (menu.reports.length > 0) {
      navMenuHtml += `<li netuno-menu-report-section class="nav-section-title"><h4>&nbsp;<i class="fa fa-fw fa-area-chart"></i>${netuno.lang['menu.reports']}</h4></li>`;
      navMenuHtml += buildMenu('report', 0, menu.reports, 0);
    }
    navbarNav.append(navMenuHtml).show().find('ul').hide();
    containers.append(containersHtml);
    return netuno.loadDevLinks(navbarNav);
  };

  netuno.loadDevMenu = function() {
    return $.ajax({
      type: 'POST',
      url: `${netuno.config.urlAdmin}dev/Main${netuno.config.extension}`,
      data: {
        'service': 'json'
      },
      success: function(response) {
        return netuno.menuDev(response);
      }
    });
  };

  netuno.loadDevForm = function(name) {
    var container;
    container = $(`\#netuno_form_design_${name}`);
    if (container.is(':empty')) {
      $.ajax({
        type: 'POST',
        url: `${netuno.config.urlAdmin}dev/FormDesign${netuno.config.extension}`,
        data: {
          'netuno_table_uid': container.attr('netuno-form-uid')
        },
        success: function(response) {
          var containerForm;
          container.html(response);
          netuno.contentLoaded(container);
          containerForm = container.find("form[name=managementForm]");
          if (containerForm.length > 0) {
            return netuno.loadValidation(containerForm);
          }
        }
      });
    }
    return container.show();
  };

  netuno.loadDevFormField = function(name, uid) {
    var container;
    container = $(`\#netuno_form_design_${name}`);
    $.ajax({
      type: 'POST',
      url: `${netuno.config.urlAdmin}dev/FormDesign${netuno.config.extension}`,
      data: {
        'netuno_table_uid': container.attr('netuno-form-uid'),
        'uid': uid
      },
      success: function(response) {
        var containerForm;
        container.html(response);
        netuno.contentLoaded(container);
        containerForm = container.find(`form[name=formDesign_${name}]`);
        if (containerForm.length > 0) {
          return netuno.loadValidation(containerForm);
        }
      }
    });
    return container.show();
  };

  netuno.loadDevReport = function(name) {
    var container;
    container = $(`\#netuno_report_design_${name}`);
    if (container.is(':empty')) {
      $.ajax({
        type: 'POST',
        url: `${netuno.config.urlAdmin}dev/ReportDesign${netuno.config.extension}`,
        data: {
          'netuno_table_uid': container.attr('netuno-report-uid')
        },
        success: function(response) {
          var containerForm;
          container.html(response);
          netuno.contentLoaded(container);
          containerForm = container.find("form[name=managementReport]");
          if (containerForm.length > 0) {
            return netuno.loadValidation(containerForm);
          }
        }
      });
    }
    return container.show();
  };

  netuno.loadDevReportField = function(name, uid) {
    var container;
    container = $(`\#netuno_report_design_${name}`);
    $.ajax({
      type: 'POST',
      url: `${netuno.config.urlAdmin}dev/ReportDesign${netuno.config.extension}`,
      data: {
        'netuno_table_uid': container.attr('netuno-report-uid'),
        'uid': uid
      },
      success: function(response) {
        var containerForm;
        container.html(response);
        netuno.contentLoaded(container);
        containerForm = container.find(`form[name=reportDesign_${name}]`);
        if (containerForm.length > 0) {
          return netuno.loadValidation(containerForm);
        }
      }
    });
    return container.show();
  };

  netuno.loadDevLinks = function(container) {
    return container.find("a[netuno-dev-content],a[netuno-dev-form],a[netuno-dev-report]").off('click').on("click", function() {
      var element, ul;
      element = $(this);
      $('.navbar-toggle:visible').click();
      if (element.is("[data-toggle]")) {
        ul = element.parent().children('ul');
        if (ul.is(':hidden')) {
          ul.fadeIn();
          element.children('i:last-child').removeClass('fa-caret-down').addClass('fa-caret-up');
        } else {
          ul.fadeOut();
          element.children('i:last-child').removeClass('fa-caret-up').addClass('fa-caret-down');
        }
      }
      if (element.is("[netuno-dev-content]")) {
        container = $(element.attr("href"));
        $("#containers > div").hide();
        if (container.length > 0 && container.is(":empty")) {
          $.ajax({
            url: element.attr('netuno-dev-content'),
            success: function(response) {
              container.html(response);
              return netuno.contentLoaded(container);
            }
          });
        }
        container.show();
        return false;
      } else if (element.is("[netuno-dev-form]")) {
        $("#containers > div").hide();
        netuno.loadDevForm(element.attr("netuno-dev-form"));
        return false;
      } else if (element.is("[netuno-dev-report]")) {
        $("#containers > div").hide();
        netuno.loadDevReport(element.attr("netuno-dev-report"));
        return false;
      }
    });
  };

  netuno.submitDev = function(containerId, formId, validation, callback) {
    var container, form;
    container = $(`\#${containerId}`);
    form = $(`#${formId}`);
    if (form.validate().valid() === false) {
      form.ajaxForm().submit();
    }
    if (validation === false || form.validate().valid()) {
      if (validation === false) {
        form.validate().cancelSubmit = true;
      }
      form.ajaxForm({
        url: form.attr("action"),
        iframe: true,
        success: function(response) {
          container.html(response);
          netuno.contentLoaded(container);
          netuno.loadValidationDev(formId);
          return typeof callback === "function" ? callback() : void 0;
        }
      }).submit();
      return true;
    } else {
      return false;
    }
  };

  netuno.loadValidationDev = function(id) {
    var form, rules;
    form = $(`\#${id}`);
    rules = {};
    form.find("[validation]").each(function() {
      var element, validation;
      element = $(this);
      validation = S(element.attr("validation"));
      rules[element.attr("name")] = {};
      if (validation.contains("required")) {
        rules[element.attr("name")]["required"] = true;
      }
      if (validation.contains("email")) {
        rules[element.attr("name")]["email"] = true;
      }
      if (validation.contains("sqlname")) {
        return rules[element.attr("name")]["sqlname"] = true;
      }
    });
    return form.validate({
      "errorElement": 'span',
      "errorClass": 'help-block',
      "focusInvalid": false,
      "ignore": "",
      "rules": rules,
      "invalidHandler": function(event, validator) {},
      "highlight": function(element) {
        return $(element).closest('.form-group').addClass('has-error');
      },
      "success": function(label) {
        label.closest('.form-group').removeClass('has-error');
        return label.remove();
      },
      "errorPlacement": function(error, element) {
        return error.insertAfter(element.closest('.input-icon'));
      }
    });
  };

  netuno.loadCodeEditor = function(container) {
    return container.find("textarea[code-editor]").each(function() {
      var element;
      element = $(this);
      return CodeMirror.fromTextArea(element[0], {
        value: element[0].value,
        mode: element.attr('code-editor'),
        indentWithTabs: true,
        smartIndent: true,
        lineNumbers: true,
        matchBrackets: true,
        autofocus: true
      });
    });
  };

  netuno.addContentLoad(function(container) {
    netuno.loadDevLinks(container);
    netuno.loadCodeEditor(container);
    return container.find("select").select2({
      theme: "bootstrap",
      placeholder: "",
      maximumSelectionSize: 6,
      allowClear: true
    });
  });

  netuno.addPageLoad(function() {
    netuno.loadDevLinks($("body"));
    return netuno.loadCodeEditor($("body"));
  });

  netuno.componentConfig = {
    load: function(netunoType, netunoUid) {
      var NetunoType, componentConfigContainer, componentType, fieldUid, netunoContainer, netunoName;
      NetunoType = '';
      if (netunoType === 'form') {
        NetunoType = 'Form';
      }
      if (netunoType === 'report') {
        NetunoType = 'Report';
      }
      netunoContainer = $(`[netuno-${netunoType}-uid="${netunoUid}"]`);
      netunoName = netunoContainer.attr(`netuno-${netunoType}-name`);
      fieldUid = netunoContainer.find(`\#field${NetunoType}Design_${netunoName}_uid`).val();
      componentType = netunoContainer.find(`\#field${NetunoType}Design_${netunoName}_type`).val();
      componentConfigContainer = $(`\#field${NetunoType}Design_${netunoName}_componentConfiguration`);
      return componentConfigContainer.load(`${netuno.config.urlAdmin}dev/ComponentConfiguration${netuno.config.extension}`, {
        component: componentType,
        uid: fieldUid,
        netuno_table_uid: netunoUid
      }, function() {
        return netuno.contentLoaded(componentConfigContainer);
      });
    },
    link: {
      popup: null,
      callbackItem: null,
      report: false,
      select: function(netunoTableUid, callbackItem) {
        var tableUid;
        netuno.componentConfig.link.callbackItem = callbackItem;
        netuno.componentConfig.link.popup = $(`#componentConfig${netunoTableUid}LinkModalSelect`);
        netuno.componentConfig.link.report = netuno.componentConfig.link.popup.attr('data-report') === '';
        tableUid = netuno.componentConfig.link.popup.attr('data-table-uid');
        if (typeof tableUid === 'undefined' || tableUid === null) {
          tableUid = '';
        }
        netuno.componentConfig.link.popup.find("[data-netuno-back]").attr('data-mode', 'select').removeAttr('data-table-uid').removeAttr('data-parameter-key');
        netuno.componentConfig.link.popup.find(".modal-body").empty().load(`${netuno.config.urlAdmin}dev/Link${netuno.config.extension}?mode=select&report=${netuno.componentConfig.link.report}`, netuno.componentConfig.link.contentLoaded);
        netuno.componentConfig.link.popup.find("[data-netuno-back]").hide();
        return netuno.componentConfig.link.popup.modal("show");
      },
      add: function(netunoTableUid, parameterKey, callbackItem) {
        var tableUid;
        netuno.componentConfig.link.callbackItem = callbackItem;
        netuno.componentConfig.link.popup = $(`#componentConfig${netunoTableUid}LinkModal_${parameterKey}`);
        tableUid = netuno.componentConfig.link.popup.attr('data-table-uid');
        if (typeof tableUid === 'undefined' || tableUid === null) {
          tableUid = '';
        }
        netuno.componentConfig.link.popup.find("[data-netuno-back]").attr('data-mode', 'add').attr('data-table-uid', netunoTableUid).attr('data-parameter-key', parameterKey);
        netuno.componentConfig.link.popup.find(".modal-body").empty().load(`${netuno.config.urlAdmin}dev/Link${netuno.config.extension}?mode=add&netuno_table_uid=${netunoTableUid}&parameter_key=${parameterKey}&table_uid=${tableUid}&report=${netuno.componentConfig.link.report}`, netuno.componentConfig.link.contentLoaded);
        return netuno.componentConfig.link.popup.modal("show");
      },
      remove: function(netunoTableUid, parameterKey, callbackItem) {
        var tableUid;
        netuno.componentConfig.link.callbackItem = callbackItem;
        netuno.componentConfig.link.popup = $(`#componentConfig${netunoTableUid}LinkModal_${parameterKey}`);
        tableUid = netuno.componentConfig.link.popup.attr('data-table-uid');
        if (typeof tableUid === 'undefined' || tableUid === null) {
          tableUid = '';
        }
        netuno.componentConfig.link.popup.find("[data-netuno-back]").attr('data-mode', 'remove').attr('data-table-uid', netunoTableUid).attr('data-parameter-key', parameterKey);
        netuno.componentConfig.link.popup.find(".modal-body").empty().load(`${netuno.config.urlAdmin}dev/Link${netuno.config.extension}?mode=remove&netuno_table_uid=${netunoTableUid}&parameter_key=${parameterKey}&table_uid=${tableUid}&report=${netuno.componentConfig.link.report}`, netuno.componentConfig.link.contentLoaded);
        return netuno.componentConfig.link.popup.modal("show");
      },
      contentLoaded: function() {
        if ($('.component_config_link_popup_table_item').length) {
          netuno.componentConfig.link.popup.find("[data-netuno-back]").hide();
          $('.component_config_link_popup_table_item').on('click', function(e) {
            var item;
            e.preventDefault();
            e.stopPropagation();
            item = $(this);
            return netuno.componentConfig.link.openTable(item.attr('data-mode'), item.attr('data-netuno-table-uid'), item.attr('data-parameter-key'), item.attr('data-table-uid'));
          });
        }
        if ($('.component_config_link_popup_field_item').length) {
          netuno.componentConfig.link.popup.find("[data-netuno-back]").off('click').on('click', function() {
            var back;
            back = $(this);
            return netuno.componentConfig.link.popup.find(".modal-body").empty().load(`${netuno.config.urlAdmin}dev/Link${netuno.config.extension}?mode=${back.attr('data-mode')}&netuno_table_uid=${back.attr('data-table-uid')}&parameter_key=${back.attr('data-parameter-key')}&report=${netuno.componentConfig.link.report}`, netuno.componentConfig.link.contentLoaded);
          }).show();
          return $('.component_config_link_popup_field_item').on('click', function(e) {
            var item;
            e.preventDefault();
            e.stopPropagation();
            item = $(this);
            return netuno.componentConfig.link.loadField(item.attr('data-mode'), item.attr('data-netuno-table-uid'), item.attr('data-parameter-key'), item.attr('data-table-uid'), item.attr('data-table-name'), item.attr('data-field-uid'), item.attr('data-field-name'));
          });
        }
      },
      openTable: function(mode, netunoTableUid, parameterKey, tableUid) {
        return netuno.componentConfig.link.popup.find(".modal-body").empty().load(`${netuno.config.urlAdmin}dev/Link${netuno.config.extension}?mode=${mode}&netuno_table_uid=${netunoTableUid}&parameter_key=${parameterKey}&table_uid=${tableUid}&report=${netuno.componentConfig.link.report}`, netuno.componentConfig.link.contentLoaded);
      },
      loadField: function(mode, netunoTableUid, parameterKey, tableUid, table, fieldUid, field) {
        var value;
        netuno.componentConfig.link.popup.attr('data-table-uid', tableUid);
        if (mode === 'add' || mode === 'remove') {
          value = $(`\#componentConfig${netunoTableUid}LinkField_${parameterKey}`).val();
          if (mode === 'add' && ((value.indexOf(":") !== -1 && value.substring(0, value.indexOf(':')) !== table) || (((value.indexOf(":") !== -1 && value.substring(value.lastIndexOf(":")) !== `:${field}`) || value.indexOf(":") === -1) && ((value.indexOf(",") !== -1 && value.substring(value.lastIndexOf(",")) !== `,${field}`) || value.indexOf(",") === -1) && value.indexOf(`,${field},`) === -1))) {
            if (value.indexOf(':') > -1 && value.substring(0, value.indexOf(':')) === table) {
              value += ',' + field;
            } else if ((value.indexOf(':') > -1 && value.substring(0, value.indexOf(':')) !== table) || (value === '')) {
              value = `${table}:${field}`;
            }
          } else if (mode === 'remove') {
            if (value.indexOf(',') > -1) {
              value = `${value},`;
              value = value.split(`:${field},`).join(':');
              value = value.split(`,${field},`).join(',');
              value = value.substring(0, value.length - 1);
            } else if (value.indexOf(':') > -1 && value.substring(0, value.indexOf(':')) === table) {
              value = '';
            } else if (value.indexOf(':') === -1) {
              value = '';
            }
          }
          if (value === '') {
            netuno.componentConfig.link.popup.attr('data-table-uid', null);
            netuno.componentConfig.link.popup.modal('hide');
          }
          $(`\#componentConfig${netunoTableUid}LinkField_${parameterKey}`).val(value);
          $(`\#componentConfig${netunoTableUid}FieldShow_${parameterKey}`).val(value);
        } else {
          netuno.componentConfig.link.popup.attr('data-table-uid', null);
          netuno.componentConfig.link.popup.modal('hide');
        }
        if (netuno.componentConfig.link.callbackItem) {
          return netuno.componentConfig.link.callbackItem(field, fieldUid);
        }
      }
    },
    choice: {
      load: function(netunoTableUid, parameterKey, defaultValue, value) {
        var select, values;
        select = $(`\#componentConfig${netunoTableUid}_${parameterKey}`);
        values = defaultValue.split('|');
        return values.map(function(v) {
          var option;
          option = new Option(v, v);
          option.selected = v === value;
          return select.append(option);
        });
      }
    },
    boolean: {
      load: function(netunoTableUid, parameterKey, defaultValue, value) {
        var checkbox;
        checkbox = $(`\#componentConfig${netunoTableUid}_${parameterKey}`);
        if (value === 'true') {
          return checkbox.attr('checked', 'checked');
        }
      }
    }
  };

  jQuery.validator.addMethod("sqlname", function(value, element) {
    var regExp;
    regExp = new RegExp("^[a-z_]+[a-z0-9_]*$", "");
    return regExp.test(value);
  }, 'Invalid name.');

}).call(this);
