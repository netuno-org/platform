{"version":3,"sources":["locales.js"],"names":[],"mappings":"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","file":"locales-compiled.js","sourcesContent":["import isArray from '../utils/is-array';\nimport compareArrays from '../utils/compare-arrays';\nimport { Locale } from './constructor';\n\n// internal storage for locale config files\nvar locales = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && typeof module !== 'undefined' &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nexport function getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (typeof values === 'undefined') {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nexport function defineLocale (name, values) {\n    if (values !== null) {\n        values.abbr = name;\n        locales[name] = locales[name] || new Locale();\n        locales[name].set(values);\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\n// returns locale data\nexport function getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n"]}