{"version":3,"sources":["create.js"],"names":[],"mappings":"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","file":"create-compiled.js","sourcesContent":["import { Duration, isDuration } from './constructor';\nimport toInt from '../utils/to-int';\nimport hasOwnProp from '../utils/has-own-prop';\nimport { DATE, HOUR, MINUTE, SECOND, MILLISECOND } from '../units/constants';\nimport { cloneWithOffset } from '../units/offset';\nimport { createLocal } from '../create/local';\n\n// ASP.NET json date format regex\nvar aspNetRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\nvar isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\nexport function createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (typeof input === 'number') {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])        * sign,\n            h  : toInt(match[HOUR])        * sign,\n            m  : toInt(match[MINUTE])      * sign,\n            s  : toInt(match[SECOND])      * sign,\n            ms : toInt(match[MILLISECOND]) * sign\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            d : parseIso(match[4], sign),\n            h : parseIso(match[5], sign),\n            m : parseIso(match[6], sign),\n            s : parseIso(match[7], sign),\n            w : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n"]}