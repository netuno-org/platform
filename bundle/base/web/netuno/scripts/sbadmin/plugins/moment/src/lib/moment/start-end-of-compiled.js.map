{"version":3,"sources":["start-end-of.js"],"names":[],"mappings":"AAAA,SAAS,cAAc,QAAQ,kBAAkB,CAAC;;AAElD,OAAO,SAAS,OAAO,CAAE,KAAK,EAAE;AAC5B,SAAK,GAAG,cAAc,CAAC,KAAK,CAAC;;;AAAC,AAG9B,YAAQ,KAAK;AACb,aAAK,MAAM;AACP,gBAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;AAAA,AAElB,aAAK,SAAS,CAAC;AACf,aAAK,OAAO;AACR,gBAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAAA,AAEjB,aAAK,MAAM,CAAC;AACZ,aAAK,SAAS,CAAC;AACf,aAAK,KAAK;AACN,gBAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;AAAA,AAElB,aAAK,MAAM;AACP,gBAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;AAAA,AAEpB,aAAK,QAAQ;AACT,gBAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;AAAA,AAEpB,aAAK,QAAQ;AACT,gBAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAAA;;;AACxB,AAGD,QAAI,KAAK,KAAK,MAAM,EAAE;AAClB,YAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KACnB;AACD,QAAI,KAAK,KAAK,SAAS,EAAE;AACrB,YAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KACtB;;;AAAA,AAGD,QAAI,KAAK,KAAK,SAAS,EAAE;AACrB,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAChD;;AAED,WAAO,IAAI,CAAC;CACf;;AAED,OAAO,SAAS,KAAK,CAAE,KAAK,EAAE;AAC1B,SAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;AAC9B,QAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,aAAa,EAAE;AAChD,eAAO,IAAI,CAAC;KACf;AACD,WAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAG,KAAK,KAAK,SAAS,GAAG,MAAM,GAAG,KAAK,CAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CAC/F","file":"start-end-of-compiled.js","sourcesContent":["import { normalizeUnits } from '../units/aliases';\n\nexport function startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n    case 'year':\n        this.month(0);\n        /* falls through */\n    case 'quarter':\n    case 'month':\n        this.date(1);\n        /* falls through */\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n        this.hours(0);\n        /* falls through */\n    case 'hour':\n        this.minutes(0);\n        /* falls through */\n    case 'minute':\n        this.seconds(0);\n        /* falls through */\n    case 'second':\n        this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nexport function endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n"]}