{"version":3,"sources":["add-subtract.js"],"names":[],"mappings":"AAAA,SAAS,GAAG,EAAE,GAAG,QAAQ,WAAW,CAAC;AACrC,SAAS,QAAQ,QAAQ,gBAAgB,CAAC;AAC1C,SAAS,cAAc,QAAQ,oBAAoB,CAAC;AACpD,SAAS,eAAe,QAAQ,oBAAoB,CAAC;AACrD,SAAS,KAAK,QAAQ,gBAAgB;;;AAAC,AAGvC,SAAS,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE;AAClC,WAAO,UAAU,GAAG,EAAE,MAAM,EAAE;AAC1B,YAAI,GAAG,EAAE,GAAG;;AAAC,AAEb,YAAI,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE;AACpC,2BAAe,CAAC,IAAI,EAAE,WAAW,GAAG,IAAI,GAAI,sDAAsD,GAAG,IAAI,GAAG,mBAAmB,CAAC,CAAC;AACjI,eAAG,GAAG,GAAG,CAAC,AAAC,GAAG,GAAG,MAAM,CAAC,AAAC,MAAM,GAAG,GAAG,CAAC;SACzC;;AAED,WAAG,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;AAC3C,WAAG,GAAG,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAClC,mBAAW,CAAC,IAAI,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;AAClC,eAAO,IAAI,CAAC;KACf,CAAC;CACL;;AAED,OAAO,SAAS,WAAW,CAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE;AAChE,QAAI,YAAY,GAAG,QAAQ,CAAC,aAAa;QACrC,IAAI,GAAG,QAAQ,CAAC,KAAK;QACrB,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC;AAC9B,gBAAY,GAAG,YAAY,IAAI,IAAI,GAAG,IAAI,GAAG,YAAY,CAAC;;AAE1D,QAAI,YAAY,EAAE;AACd,WAAG,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,YAAY,GAAG,QAAQ,CAAC,CAAC;KACrD;AACD,QAAI,IAAI,EAAE;AACN,WAAG,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC;KACxD;AACD,QAAI,MAAM,EAAE;AACR,gBAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC;KACxD;AACD,QAAI,YAAY,EAAE;AACd,aAAK,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,IAAI,MAAM,CAAC,CAAC;KAC3C;CACJ;;AAED,OAAO,IAAI,GAAG,GAAQ,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,OAAO,IAAI,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC","file":"add-subtract-compiled.js","sourcesContent":["import { get, set } from './get-set';\nimport { setMonth } from '../units/month';\nimport { createDuration } from '../duration/create';\nimport { deprecateSimple } from '../utils/deprecate';\nimport { hooks } from '../utils/hooks';\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nexport function addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = duration._days,\n        months = duration._months;\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(+mom._d + milliseconds * isAdding);\n    }\n    if (days) {\n        set(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nexport var add      = createAdder(1, 'add');\nexport var subtract = createAdder(-1, 'subtract');\n\n"]}