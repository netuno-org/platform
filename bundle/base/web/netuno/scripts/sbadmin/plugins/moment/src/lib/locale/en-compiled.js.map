{"version":3,"sources":["en.js"],"names":[],"mappings":"AAAA,OAAO,aAAa,CAAC;AACrB,SAAS,kBAAkB,QAAQ,WAAW,CAAC;AAC/C,OAAO,KAAK,MAAM,iBAAiB,CAAC;;AAEpC,kBAAkB,CAAC,IAAI,EAAE;AACrB,gBAAY,EAAE,sBAAsB;AACpC,WAAO,EAAG,UAAU,MAAM,EAAE;AACxB,YAAI,CAAC,GAAG,MAAM,GAAG,EAAE;YACf,MAAM,GAAG,AAAC,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,GAAI,IAAI,GAChD,AAAC,CAAC,KAAK,CAAC,GAAI,IAAI,GAChB,AAAC,CAAC,KAAK,CAAC,GAAI,IAAI,GAChB,AAAC,CAAC,KAAK,CAAC,GAAI,IAAI,GAAG,IAAI,CAAC;AAC5B,eAAO,MAAM,GAAG,MAAM,CAAC;KAC1B;CACJ,CAAC,CAAC","file":"en-compiled.js","sourcesContent":["import './prototype';\nimport { getSetGlobalLocale } from './locales';\nimport toInt from '../utils/to-int';\n\ngetSetGlobalLocale('en', {\n    ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n"]}