{"version":3,"sources":["timestamp.js"],"names":[],"mappings":"AAAA,SAAS,cAAc,QAAQ,kBAAkB,CAAC;AAClD,SAAS,aAAa,EAAE,cAAc,EAAE,WAAW,QAAQ,gBAAgB,CAAC;AAC5E,SAAS,aAAa,QAAQ,gBAAgB,CAAC;AAC/C,OAAO,KAAK,MAAM,iBAAiB;;;;AAAC,AAIpC,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAClC,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC;;;;AAAC,AAIrC,aAAa,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAChC,aAAa,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACnC,aAAa,CAAC,GAAG,EAAE,UAAU,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;AAC/C,UAAM,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;CACtD,CAAC,CAAC;AACH,aAAa,CAAC,GAAG,EAAE,UAAU,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;AAC/C,UAAM,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;CACtC,CAAC,CAAC","file":"timestamp-compiled.js","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { addRegexToken, matchTimestamp, matchSigned } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport toInt from '../utils/to-int';\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n"]}