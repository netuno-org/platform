{"version":3,"sources":["as-compiled.js"],"names":[],"mappings":"AAAA,SAAS,YAAY,EAAE,YAAY,QAAQ,UAAU,CAAC;AACtD,SAAS,cAAc,QAAQ,kBAAkB,CAAC;AAClD,OAAO,KAAK,MAAM,iBAAiB,CAAC;;AAEpC,OAAO,SAAS,EAAE,CAAC,KAAK,EAAE;AACtB,QAAI,IAAI,CAAC;AACT,QAAI,MAAM,CAAC;AACX,QAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;;AAEtC,SAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;;AAE9B,QAAI,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,MAAM,EAAE;AACvC,YAAI,GAAG,IAAI,CAAC,KAAK,GAAG,YAAY,GAAG,KAAK,CAAC;AACzC,cAAM,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AAC3C,eAAO,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC;KACnD,MAAM;;AAEH,YAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAC3D,gBAAQ,KAAK;AACT,iBAAK,MAAM;AACP,uBAAO,IAAI,GAAG,CAAC,GAAG,YAAY,GAAG,MAAM,CAAC;AAAA,AAC5C,iBAAK,KAAK;AACN,uBAAO,IAAI,GAAG,YAAY,GAAG,KAAK,CAAC;AAAA,AACvC,iBAAK,MAAM;AACP,uBAAO,IAAI,GAAG,EAAE,GAAG,YAAY,GAAG,IAAI,CAAC;AAAA,AAC3C,iBAAK,QAAQ;AACT,uBAAO,IAAI,GAAG,IAAI,GAAG,YAAY,GAAG,GAAG,CAAC;AAAA,AAC5C,iBAAK,QAAQ;AACT,uBAAO,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,IAAI,CAAC;;AAAA,AAE9C,iBAAK,aAAa;AACd,uBAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,YAAY,CAAC;AAAA,AACnD;AACI,sBAAM,IAAI,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;AAAA,SAChD;KACJ;CACJ;;;AAAA,AAGD,OAAO,SAAS,OAAO,GAAG;AACtB,WAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,OAAO,CAAC;CACpH;;AAED,SAAS,MAAM,CAAC,KAAK,EAAE;AACnB,WAAO,YAAY;AACf,eAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KACzB,CAAC;CACL;;AAED,OAAO,IAAI,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACzC,OAAO,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACnC,OAAO,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACnC,OAAO,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACjC,OAAO,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAChC,OAAO,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACjC,OAAO,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAClC,OAAO,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;;;AAAA","file":"as-compiled-compiled.js","sourcesContent":["import { daysToMonths, monthsToDays } from './bubble';\nimport { normalizeUnits } from '../units/aliases';\nimport toInt from '../utils/to-int';\n\nexport function as(units) {\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days = this._days + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week':\n                return days / 7 + milliseconds / 6048e5;\n            case 'day':\n                return days + milliseconds / 864e5;\n            case 'hour':\n                return days * 24 + milliseconds / 36e5;\n            case 'minute':\n                return days * 1440 + milliseconds / 6e4;\n            case 'second':\n                return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond':\n                return Math.floor(days * 864e5) + milliseconds;\n            default:\n                throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nexport function valueOf() {\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n}\n\nfunction makeAs(alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nexport var asMilliseconds = makeAs('ms');\nexport var asSeconds = makeAs('s');\nexport var asMinutes = makeAs('m');\nexport var asHours = makeAs('h');\nexport var asDays = makeAs('d');\nexport var asWeeks = makeAs('w');\nexport var asMonths = makeAs('M');\nexport var asYears = makeAs('y');\n\n//# sourceMappingURL=as-compiled.js.map"]}