{"version":3,"sources":["parsing-flags.js"],"names":[],"mappings":"AAAA,SAAS,mBAAmB,GAAG;;AAE3B,WAAO;AACH,aAAK,EAAa,KAAK;AACvB,oBAAY,EAAM,EAAE;AACpB,mBAAW,EAAO,EAAE;AACpB,gBAAQ,EAAU,CAAC,CAAC;AACpB,qBAAa,EAAK,CAAC;AACnB,iBAAS,EAAS,KAAK;AACvB,oBAAY,EAAM,IAAI;AACtB,qBAAa,EAAK,KAAK;AACvB,uBAAe,EAAG,KAAK;AACvB,WAAG,EAAe,KAAK;KAC1B,CAAC;CACL;;AAED,eAAe,SAAS,eAAe,CAAC,CAAC,EAAE;AACvC,QAAI,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE;AACf,SAAC,CAAC,GAAG,GAAG,mBAAmB,EAAE,CAAC;KACjC;AACD,WAAO,CAAC,CAAC,GAAG,CAAC;CAChB","file":"parsing-flags-compiled.js","sourcesContent":["function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false\n    };\n}\n\nexport default function getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n"]}