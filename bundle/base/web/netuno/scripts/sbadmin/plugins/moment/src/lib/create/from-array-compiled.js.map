{"version":3,"sources":["from-array.js"],"names":[],"mappings":"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","file":"from-array-compiled.js","sourcesContent":["import { createDate, createUTCDate } from './date-from-array';\nimport { daysInYear } from '../units/year';\nimport { weekOfYear } from '../units/week';\nimport { dayOfYearFromWeeks } from '../units/day-of-year';\nimport { YEAR, MONTH, DATE, HOUR, MINUTE, SECOND, MILLISECOND } from '../units/constants';\nimport { createLocal } from './local';\nimport defaults from '../utils/defaults';\nimport getParsingFlags from './parsing-flags';\n\nfunction currentDateArray(config) {\n    var now = new Date();\n    if (config._useUTC) {\n        return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n    }\n    return [now.getFullYear(), now.getMonth(), now.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nexport function configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse)) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(createLocal(), dow, doy).year);\n        week = defaults(w.w, 1);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < dow) {\n                ++week;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n}\n"]}