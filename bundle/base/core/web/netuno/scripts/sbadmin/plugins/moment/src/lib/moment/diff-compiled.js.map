{"version":3,"sources":["diff.js"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,oBAAoB,CAAC;AAC1C,SAAS,eAAe,QAAQ,iBAAiB,CAAC;AAClD,SAAS,cAAc,QAAQ,kBAAkB,CAAC;;AAElD,OAAO,SAAS,IAAI,CAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;AACzC,QAAI,IAAI,GAAG,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC;QACnC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAA,GAAI,GAAG;QACvD,KAAK;QAAE,MAAM,CAAC;;AAElB,SAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;;AAE9B,QAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,SAAS,EAAE;AAC9D,cAAM,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC/B,YAAI,KAAK,KAAK,SAAS,EAAE;AACrB,kBAAM,GAAG,MAAM,GAAG,CAAC,CAAC;SACvB,MAAM,IAAI,KAAK,KAAK,MAAM,EAAE;AACzB,kBAAM,GAAG,MAAM,GAAG,EAAE,CAAC;SACxB;KACJ,MAAM;AACH,aAAK,GAAG,IAAI,GAAG,IAAI,CAAC;AACpB,cAAM,GAAG,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,GAAG;AACrC,aAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,GAAG;AAChC,aAAK,KAAK,MAAM,GAAG,KAAK,GAAG,IAAI;AAC/B,aAAK,KAAK,KAAK,GAAG,CAAC,KAAK,GAAG,SAAS,CAAA,GAAI,KAAK;AAC7C,aAAK,KAAK,MAAM,GAAG,CAAC,KAAK,GAAG,SAAS,CAAA,GAAI,MAAM;AAC/C,aAAK,CAAC;KACb;AACD,WAAO,OAAO,GAAG,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;CAC9C;;AAED,SAAS,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE;;AAEtB,QAAI,cAAc,GAAG,AAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA,GAAI,EAAE,IAAK,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAA,AAAC;;;AAEvE,UAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC;QAChD,OAAO;QAAE,MAAM,CAAC;;AAEpB,QAAI,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE;AAChB,eAAO,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,EAAE,QAAQ,CAAC;;AAAC,AAEtD,cAAM,GAAG,CAAC,CAAC,GAAG,MAAM,CAAA,IAAK,MAAM,GAAG,OAAO,CAAA,AAAC,CAAC;KAC9C,MAAM;AACH,eAAO,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,EAAE,QAAQ,CAAC;;AAAC,AAEtD,cAAM,GAAG,CAAC,CAAC,GAAG,MAAM,CAAA,IAAK,OAAO,GAAG,MAAM,CAAA,AAAC,CAAC;KAC9C;;AAED,WAAO,EAAE,cAAc,GAAG,MAAM,CAAA,AAAC,CAAC;CACrC","file":"diff-compiled.js","sourcesContent":["import absFloor from '../utils/abs-floor';\nimport { cloneWithOffset } from '../units/offset';\nimport { normalizeUnits } from '../units/aliases';\n\nexport function diff (input, units, asFloat) {\n    var that = cloneWithOffset(input, this),\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,\n        delta, output;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    return -(wholeMonthDiff + adjust);\n}\n"]}