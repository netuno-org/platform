{"version":3,"sources":["set.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,GAAG,CAAE,MAAM,EAAE;AACzB,QAAI,IAAI,EAAE,CAAC,CAAC;AACZ,SAAK,CAAC,IAAI,MAAM,EAAE;AACd,YAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACjB,YAAI,OAAO,IAAI,KAAK,UAAU,EAAE;AAC5B,gBAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAClB,MAAM;AACH,gBAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;SACxB;KACJ;;;AAAA,AAGD,QAAI,CAAC,oBAAoB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,GAAG,GAAG,AAAC,SAAS,CAAE,MAAM,CAAC,CAAC;CAChG","file":"set-compiled.js","sourcesContent":["export function set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (typeof prop === 'function') {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _ordinalParseLenient.\n    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n}\n"]}