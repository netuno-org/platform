{"version":3,"sources":["bubble.js"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,oBAAoB,CAAC;AAC1C,OAAO,OAAO,MAAM,mBAAmB,CAAC;AACxC,SAAS,aAAa,QAAQ,2BAA2B,CAAC;;AAE1D,OAAO,SAAS,MAAM,GAAI;AACtB,QAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;AACtC,QAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC;AAC9B,QAAI,MAAM,GAAS,IAAI,CAAC,OAAO,CAAC;AAChC,QAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC;AAC9B,QAAI,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc;;;;AAAC,AAInD,QAAI,EAAE,AAAC,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAC3C,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,CAAC,AAAC,EAAE;AACtD,oBAAY,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;AAC7D,YAAI,GAAG,CAAC,CAAC;AACT,cAAM,GAAG,CAAC,CAAC;KACd;;;;AAAA,AAID,QAAI,CAAC,YAAY,GAAG,YAAY,GAAG,IAAI,CAAC;;AAExC,WAAO,GAAa,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;AAClD,QAAI,CAAC,OAAO,GAAQ,OAAO,GAAG,EAAE,CAAC;;AAEjC,WAAO,GAAa,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;AAC3C,QAAI,CAAC,OAAO,GAAQ,OAAO,GAAG,EAAE,CAAC;;AAEjC,SAAK,GAAe,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;AAC3C,QAAI,CAAC,KAAK,GAAU,KAAK,GAAG,EAAE,CAAC;;AAE/B,QAAI,IAAI,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;;;AAAC,AAG7B,kBAAc,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,UAAM,IAAI,cAAc,CAAC;AACzB,QAAI,IAAI,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;;;AAAC,AAG9C,SAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;AAC9B,UAAM,IAAI,EAAE,CAAC;;AAEb,QAAI,CAAC,IAAI,GAAK,IAAI,CAAC;AACnB,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,KAAK,GAAI,KAAK,CAAC;;AAEpB,WAAO,IAAI,CAAC;CACf;;AAED,OAAO,SAAS,YAAY,CAAE,IAAI,EAAE;;;AAGhC,WAAO,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;CAC/B;;AAED,OAAO,SAAS,YAAY,CAAE,MAAM,EAAE;;AAElC,WAAO,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;CACjC","file":"bubble-compiled.js","sourcesContent":["import absFloor from '../utils/abs-floor';\nimport absCeil from '../utils/abs-ceil';\nimport { createUTCDate } from '../create/date-from-array';\n\nexport function bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nexport function daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nexport function monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n"]}