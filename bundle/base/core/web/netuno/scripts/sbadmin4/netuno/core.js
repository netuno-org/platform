// Generated by CoffeeScript 2.2.4
(function() {
  toastr.options = {
    "closeButton": true,
    "debug": false,
    "newestOnTop": true,
    "progressBar": false,
    "positionClass": "toast-top-center",
    "preventDuplicates": true,
    "onclick": null,
    "showDuration": "300",
    "hideDuration": "1000",
    "timeOut": "3000",
    "extendedTimeOut": "1000",
    "showEasing": "swing",
    "hideEasing": "linear",
    "showMethod": "fadeIn",
    "hideMethod": "fadeOut"
  };

  $(function() {
    $('form').submit(function() {
      return false;
    });
  });

  netuno.newUid = function() {
    var s4;
    s4 = function() {
      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
    };
    return `${s4()}${s4()}_${s4()}_${s4()}_${s4()}_${s4()}${s4()}${s4()}`;
  };

  netuno.callbacks = {
    create: function(func) {
      var key;
      key = netuno.newUid();
      netuno.callbacks[key] = func;
      return key;
    },
    remove: function(key) {
      return delete netuno.callbacks[key];
    }
  };

  netuno.menu = function(menu) {
    var buildMenu, containersHtml, navMenuHtml;
    navMenuHtml = '<li class="nav-item"><a href="#netuno_dashboard" class="nav-link">Dashboard</a></li>';
    containersHtml = '';
    buildMenu = function(type, parentUId, items, level) {
      var expand, item, j, len, menuHtml;
      menuHtml = '';
      if (level > 0) {
        menuHtml += '<ul>';
      }
      for (j = 0, len = items.length; j < len; j++) {
        item = items[j];
        expand = "";
        if (item.items.length > 0) {
          expand = " data-toggle=";
        }
        menuHtml += '<li class="nav-item">';
        menuHtml += `<a class="nav-link" href="\#" netuno-${type}="${item.name}"${expand}>`;
        menuHtml += `${item.text}`;
        if (item.items.length > 0) {
          menuHtml += "<i class=\"fa fa-caret-down\"></i>";
        }
        menuHtml += "</a>";
        if (item.items.length > 0) {
          menuHtml += buildMenu(type, item.uid, item.items, level + 1);
        }
        menuHtml += '</li>';
        containersHtml += `<div netuno-${type} netuno-${type}-uid="${item.uid}" netuno-${type}-name="${item.name}">`;
        if (type === 'form') {
          containersHtml += `<div class="netuno-form-edit" netuno-${type}-edit="${item.name}"></div>`;
          containersHtml += `<div class="netuno-form-search" netuno-${type}-search="${item.name}"></div>`;
        }
        containersHtml += "</div>";
      }
      if (level > 0) {
        menuHtml += '</ul>';
      }
      return menuHtml;
    };
    if (menu.forms.length > 0) {
      navMenuHtml += `<li class="nav-section-title"><h4>&nbsp;<i class="fa fa-edit"></i>${netuno.lang['menu.forms']}</h4></li>`;
      navMenuHtml += buildMenu('form', 0, menu.forms, 0);
    }
    if (menu.reports.length > 0) {
      navMenuHtml += `<li class="nav-section-title"><h4>&nbsp;<i class="fa fa-area-chart"></i>${netuno.lang['menu.reports']}</h4></li>`;
      navMenuHtml += buildMenu('report', 0, menu.reports, 0);
    }
    $('.sidebar > .navbar-nav').append(navMenuHtml).show().find('ul').hide();
    return $('#containers').append(containersHtml);
  };

  netuno.loadForm = function(container) {
    var containerSearch, data, mainContainer;
    if (!(container instanceof jQuery)) {
      container = $(container);
    }
    container = container.is("[netuno-form][netuno-form-uid]") ? container : container.closest("[netuno-form][netuno-form-uid]");
    containerSearch = container.children('[netuno-form-search]');
    data = {
      'netuno_table_uid': container.attr('netuno-form-uid')
    };
    if (container.is("[netuno-form-relation]")) {
      mainContainer = container.parents("[netuno-form][netuno-form-uid]");
      data['netuno_relation_table_uid'] = mainContainer.find('input[name=netuno_table_uid]').val();
      data['netuno_relation_item_uid'] = mainContainer.find('input[name=netuno_item_uid]').val();
    }
    if (containerSearch.is(':empty')) {
      $.ajax({
        type: 'POST',
        url: `${netuno.config.urlBase}Search${netuno.config.extension}`,
        data: data,
        success: function(response) {
          containerSearch.html(response);
          return netuno.contentLoaded(containerSearch);
        }
      });
    }
    return container.show();
  };

  netuno.loadFormSearchDataTable = function(table) {
    var container, containerSearch, containerSearchForm, dt, findDataTableTR, isButton, tableBody;
    if (!(table instanceof jQuery)) {
      table = $(table);
    }
    isButton = table.is('button');
    container = table.parents("[netuno-form][netuno-form-uid]:first");
    if (!table.is('table')) {
      table = container.find(`[netuno-form-search-table=${container.attr('netuno-form-name')}]:first`);
    }
    containerSearch = container.children('[netuno-form-search]');
    containerSearchForm = containerSearch.find(`form[name=netuno_form_${container.attr('netuno-form-name')}_search]:first`);
    tableBody = table.find('tbody');
    findDataTableTR = function(e) {
      if (e.parentNode.tagName.toLowerCase() === 'tr') {
        return e.parentNode;
      }
      return findDataTableTR(e.parentNode);
    };
    tableBody.click(function(event) {
      return netuno.loadFormEdit(table, $(findDataTableTR(event.target)).children(':first-child').children('span').html());
    });
    if (table.find('th').length > 0) {
      if (isButton) {
        netuno.unmask(containerSearchForm);
      }
      dt = table.dataTable({
        "pagingType": "full_numbers",
        "pageLength": 25,
        "processing": false,
        "serverSide": true,
        "destroy": true,
        "ajax": {
          "url": `${netuno.config.urlBase}Search${netuno.config.extension}?netuno_action=datasource&` + containerSearchForm.serialize(),
          "type": "POST"
        },
        "drawCallback": function(settings, json) {
          return netuno.mask(table);
        },
        "initComplete": function(settings, json) {
          return table.fadeIn();
        },
        "language": netuno.config.dataTable,
        "dom": 'pitip',
        "tableTools": {
          "sSwfPath": `${netuno.config.urlScripts}/plugins/datatables-tabletools/swf/copy_csv_xls_pdf.swf`
        }
      });
      if (isButton) {
        return netuno.mask(containerSearchForm);
      }
    }
  };

  netuno.loadFormEdit = function(container, item) {
    var containerEdit, data, mainContainer;
    if (!(container instanceof jQuery)) {
      container = $(container);
    }
    container = container.is("[netuno-form][netuno-form-uid]") ? container : container.parents("[netuno-form][netuno-form-uid]:first");
    container.children('[netuno-form-search]').hide();
    data = {
      'netuno_table_uid': container.attr('netuno-form-uid'),
      'netuno_item_uid': item,
      'netuno_edit_only': container.is("[netuno-form-edit-only]"),
      'netuno_zone': container.attr('netuno-zone')
    };
    if (container.is("[netuno-form-relation]")) {
      mainContainer = container.parents("[netuno-form][netuno-form-uid]:first");
      data['netuno_relation_table_uid'] = mainContainer.find('input[name=netuno_table_uid]').val();
      data['netuno_relation_item_uid'] = mainContainer.find('input[name=netuno_item_uid]').val();
    }
    containerEdit = container.children('[netuno-form-edit]');
    containerEdit.empty();
    containerEdit.show();
    return $.ajax({
      type: 'POST',
      url: `${netuno.config.urlBase}Edit${netuno.config.extension}`,
      data: data,
      success: function(response) {
        var containerEditForm;
        containerEdit.html(response);
        netuno.contentLoaded(containerEdit);
        containerEditForm = containerEdit.find(`form[name=netuno_form_${container.attr('netuno-form-name')}_edit]`);
        if (containerEditForm.length > 0) {
          netuno.loadValidation(containerEditForm);
        }
        if (typeof item === 'undefined' || item === null || item === '') {
          return container.trigger('netuno:new');
        } else {
          return container.trigger('netuno:edit', [item]);
        }
      }
    });
  };

  netuno.backFormEdit = function(element) {
    var container;
    if (!(element instanceof jQuery)) {
      element = $(element);
    }
    container = element.is("[netuno-form][netuno-form-uid]") ? element : element.parents("[netuno-form][netuno-form-uid]:first");
    container.children('[netuno-form-edit]').empty().hide();
    container.children('[netuno-form-search]').show();
    netuno.loadFormSearchDataTable(container.find(`[netuno-form-search-table=${container.attr('netuno-form-name')}]:first`));
    return container.trigger('netuno:back');
  };

  netuno.saveFormEdit = function(element, fromRelation) {
    var callback, container, containerEdit, containerEditForm;
    if (!(element instanceof jQuery)) {
      element = $(element);
    }
    container = element.is("[netuno-form][netuno-form-uid]") ? element : element.parents("[netuno-form][netuno-form-uid]:first");
    containerEdit = container.children('[netuno-form-edit]');
    containerEditForm = containerEdit.find(`form[name=netuno_form_${container.attr('netuno-form-name')}_edit]:first`);
    netuno.unmask(containerEditForm);
    containerEditForm.ajaxForm().submit();
    if (containerEditForm.validate().valid()) {
      callback = netuno.callbacks.create(function(uid) {
        return container.trigger('netuno:save', [uid]);
      });
      containerEditForm.ajaxForm({
        url: `${netuno.config.urlBase}Edit${netuno.config.extension}?netuno_action=save&netuno_autosave=${typeof fromRelation !== 'undefined'}&netuno_callback=${callback}`,
        iframe: false,
        success: function(response) {
          containerEdit.html(response);
          containerEditForm = containerEdit.find(`form[name=netuno_form_${container.attr('netuno-form-name')}_edit]:first`);
          if (containerEditForm.length > 0) {
            netuno.contentLoaded(containerEdit);
            netuno.loadValidation(containerEditForm);
            if (typeof fromRelation !== 'undefined') {
              return containerEditForm.find(`button[netuno-form-edit-relation-button=${fromRelation}]:first`).trigger('click');
            }
          }
        }
      }).submit();
      return true;
    } else {
      netuno.mask(containerEditForm);
      return false;
    }
  };

  netuno.deleteFormEdit = function(element) {
    var callback, container, containerEdit, containerEditForm;
    if (!(element instanceof jQuery)) {
      element = $(element);
    }
    container = element.is("[netuno-form][netuno-form-uid]") ? element : element.parents("[netuno-form][netuno-form-uid]:first");
    containerEdit = container.children('[netuno-form-edit]');
    if (!containerEdit.is(':empty')) {
      containerEditForm = containerEdit.find(`form[name=netuno_form_${container.attr('netuno-form-name')}_edit]:first`);
      netuno.unmask(containerEditForm);
      callback = netuno.callbacks.create(function(uid) {
        return container.trigger('netuno:delete', [uid]);
      });
      return $.ajax({
        type: 'POST',
        url: `${netuno.config.urlBase}Edit${netuno.config.extension}?netuno_action=delete&netuno_callback=${callback}`,
        data: containerEditForm.serialize(),
        success: function(response) {
          containerEdit.html(response);
          netuno.contentLoaded(containerEdit);
          containerEditForm = containerEdit.find(`form[name=netuno_form_${container.attr('netuno-form-name')}_edit]:first`);
          if (containerEditForm.length > 0) {
            return netuno.loadValidation(containerEditForm);
          }
        }
      });
    }
  };

  netuno.loadReport = function(container) {
    if (!(container instanceof jQuery)) {
      container = $(container);
    }
    container = container.is("[netuno-report][netuno-report-uid]") ? container : container.parents("[netuno-report][netuno-report-uid]:first");
    container.children('[netuno-report-search]').hide();
    if (container.is(':empty')) {
      $.ajax({
        type: 'POST',
        url: `${netuno.config.urlBase}Report${netuno.config.extension}`,
        data: {
          'netuno_report_uid': container.attr('netuno-report-uid')
        },
        success: function(response) {
          container.html(response);
          return netuno.contentLoaded(container);
        }
      });
    }
    return container.show();
  };

  netuno.buildReport = function(report) {
    var container, containerForm, containerResult;
    if (!(report instanceof jQuery)) {
      report = $(report);
    }
    container = report.parents("[netuno-report][netuno-report-uid]:first");
    containerResult = container.children(`[netuno-report-result=${container.attr('netuno-report-name')}]`);
    containerForm = container.find(`form[name=netuno_report_${container.attr('netuno-report-name')}_form]:first`);
    containerForm.ajaxForm().submit();
    if (containerForm.validate().valid()) {
      containerForm.ajaxForm({
        url: `${netuno.config.urlBase}ReportBuilder${netuno.config.extension}`,
        iframe: false,
        success: function(response) {
          containerResult.html(response);
          return netuno.contentLoaded(containerResult);
        }
      }).submit();
      return true;
    } else {
      return false;
    }
  };

  netuno.loadValidation = function(form) {
    var rules;
    if (!(form instanceof jQuery)) {
      form = $(form);
    }
    form = form.is("form") ? form : form.closest("form");
    rules = {};
    form.find("[validation]").each(function() {
      var element, validation;
      element = $(this);
      validation = S(element.attr("validation"));
      rules[element.attr("name")] = {};
      if (validation.contains("required")) {
        rules[element.attr("name")]["required"] = true;
      }
      if (validation.contains("email")) {
        return rules[element.attr("name")]["email"] = true;
      }
    });
    return form.validate({
      "errorElement": 'span',
      "errorClass": 'help-block',
      "focusInvalid": false,
      "ignore": "",
      "rules": rules,
      "invalidHandler": function(event, validator) {},
      "highlight": function(element) {
        return $(element).closest('.form-group').addClass('has-error');
      },
      "success": function(label) {
        label.closest('.form-group').removeClass('has-error');
        return label.remove();
      },
      "errorPlacement": function(error, element) {
        return error.insertAfter(element.closest('.input-icon'));
      }
    });
  };

  netuno.downloadProgress = function(url) {
    var modal, tickStatus, time;
    time = new Date().getTime();
    $("body").append(`<iframe id="netuno_download_${time}" src="${url}&downloadToken=${time}" style="display: none;"></iframe>`);
    if (!navigator.userAgent.match(/msie/i)) {
      modal = $('#netuno_download');
      modal.modal('show');
      tickStatus = function() {
        $('\#netuno_download_progress_bar').css('width', "100%").attr('aria-valuenow', 100);
        return $.ajax({
          type: 'GET',
          url: `${url}&downloadToken=${time}&downloadStatus=true`,
          success: function(response) {
            var iframe;
            if (response === 'done') {
              iframe = $(`\#netuno_download_${time}`);
              if ($(`\#netuno_download_${time}`).length > 0) {
                iframe.remove();
                return window.setTimeout(function() {
                  modal.modal('hide');
                  return $('\#netuno_download_progress_bar').css('width', "0%").attr('aria-valuenow', 0);
                }, 1000);
              }
            } else {
              return window.setTimeout(tickStatus, 1000);
            }
          }
        });
      };
      return tickStatus();
    }
  };

  netuno.keepAlive = function() {
    if (typeof netuno.config.user !== 'undefined') {
      return $.ajax({
        type: 'POST',
        url: `${netuno.config.urlBase}KeepAlive${netuno.config.extension}`,
        success: function(response) {
          if (response === "1") {
            return window.setTimeout('netuno.keepAlive();', 360000);
          } else {
            return document.location.href = `${netuno.config.urlBase}Index${netuno.config.extension}`;
          }
        }
      });
    }
  };

  netuno.loadLinks = function(container) {
    return container.find("a").on("click", function() {
      var element, formName, reportName, ul;
      element = $(this);
      if (element.parents('.sidebar').length === 1 && window.innerWidth < 768 && element.attr('data-toggle') === null) {
        $("\#sidebarToggle").trigger('click');
      }
      if (element.attr("rel") === "external") {
        if (element.attr("target") === "_blank") {
          window.open(element.attr("href"));
          return false;
        } else {
          window.location.href = element.attr("href");
          return false;
        }
      } else {
        if (element.is("[data-toggle]")) {
          ul = element.parent().children('ul');
          if (ul.is(':hidden')) {
            ul.fadeIn();
            element.children('i:last-child').removeClass('fa-caret-down').addClass('fa-caret-up');
          } else {
            ul.fadeOut();
            element.children('i:last-child').removeClass('fa-caret-up').addClass('fa-caret-down');
          }
        }
        if (element.parents('.navbar-nav').length === 1) {
          window.scrollTo(0, 0);
        }
        if (element.is("[netuno-content]")) {
          container = $(element.attr("href"));
          $("#containers > div").hide();
          if (container.length > 0 && container.is(":empty")) {
            $.ajax({
              url: element.attr('netuno-content'),
              success: function(response) {
                container.html(response);
                return netuno.contentLoaded(container);
              }
            });
          }
          container.show();
          return false;
        } else if (element.is("[netuno-form]")) {
          formName = element.attr("netuno-form");
          $("\#containers > div").hide();
          netuno.loadForm($(`\#containers > div[netuno-form-name=${formName}]`));
          return false;
        } else if (element.is("[netuno-report]")) {
          reportName = element.attr("netuno-report");
          $("#containers > div").hide();
          netuno.loadReport($(`\#containers > div[netuno-report-name=${reportName}]`));
          return false;
        } else if (element.attr("href") !== "#") {
          container = $(element.attr("href"));
          $("#containers > div").hide();
          container.show();
          return false;
        }
      }
    });
  };

  netuno.mask = function(container) {
    return container.find('[data-mask]').each(function() {
      var o;
      o = $(this);
      if (o.attr('data-mask') !== null && o.attr('data-mask') !== '') {
        return o.mask(o.attr('data-mask'), {
          reverse: o.attr('data-mask-reverse') === 'true',
          selectOnFocus: o.attr('data-mask-selectonfocus') === 'true'
        });
      }
    });
  };

  netuno.unmask = function(container) {
    return container.find('[data-mask]').each(function() {
      var data, o;
      o = $(this);
      if (typeof o.data().mask !== 'undefined' && o.data().mask !== null) {
        if (o.text() !== '') {
          data = o.data();
          delete data.mask;
          return o.data(data);
        } else {
          return o.unmask();
        }
      }
    });
  };

  netuno.addContentLoad(function(container) {
    return netuno.loadLinks(container);
  });

  netuno.addContentLoad(function(container) {
    return container.find("select").select2({
      theme: "bootstrap4",
      placeholder: "",
      maximumSelectionSize: 6
    });
  });

  netuno.addContentLoad(function(container) {
    return netuno.mask(container);
  });

  netuno.openRelation = function(name) {
    var container, containerSearch;
    container = $(`\#netuno_form_${name}`);
    containerSearch = container.children('[netuno-form-search]');
    if (containerSearch.is(':empty')) {
      $.ajax({
        type: 'POST',
        url: `${netuno.config.urlBase}Search${netuno.config.extension}`,
        data: {
          'netuno_table_uid': container.attr('netuno-form-uid')
        },
        success: function(response) {
          containerSearch.html(response);
          return netuno.contentLoaded(containerSearch);
        }
      });
    }
    return container.show();
  };

  netuno.addPageLoad(function() {
    return netuno.loadLinks($("body"));
  });

  netuno.modal = {};

  netuno.modal.stack = [];

  netuno.modal.create = function(config) {
    var key;
    config = $.extend({
      name: null,
      container: $('body'),
      relation: false,
      callback: function(modal) {}
    }, config);
    if (config.name === null) {
      return;
    }
    key = netuno.newUid();
    return $.ajax({
      type: 'POST',
      url: `${netuno.config.urlBase}Edit${netuno.config.extension}`,
      dataType: 'json',
      data: {
        netuno_action: 'uid',
        netuno_table_name: config.name
      },
      success: function(response) {
        var modalRelationFormParam, modalRelationParam;
        modalRelationParam = "";
        modalRelationFormParam = "";
        if (config.relation) {
          modalRelationParam = `netuno-form-edit-relation-modal="${config.name}"`;
          modalRelationFormParam = "netuno-form-relation";
        }
        config.container.append(`<div id="netuno-modal-${key}" ${modalRelationParam} class="netuno-modal">\n  <div class="container-fluid">\n    <div netuno-form netuno-form-uid="${response.uid}" netuno-form-name="${config.name}" ${modalRelationFormParam}>\n      <div class="netuno-form-edit" netuno-form-edit></div>\n      <div class="netuno-form-search" netuno-form-search></div>\n    </div>\n  </div>\n</div>`);
        return config.callback($(`\#netuno-modal-${key}`));
      }
    });
  };

  netuno.modal.showAndLoad = function(modal) {
    if (!(modal instanceof jQuery)) {
      modal = $(modal);
    }
    netuno.modal.show(modal);
    return netuno.loadForm(modal.find('[netuno-form]'));
  };

  netuno.modal.show = function(modal) {
    if (!(modal instanceof jQuery)) {
      modal = $(modal);
    }
    modal.trigger('netuno:modal:show');
    $('#netuno-modal-curtain').fadeIn();
    $('#netuno-modal-close').show();
    modal.show();
    netuno.modal.stack.push(modal);
    return modal.trigger('netuno:modal:shown');
  };

  netuno.modal.hide = function(modal) {
    var i, j, ref;
    if (!(modal instanceof jQuery)) {
      modal = $(modal);
    }
    modal.trigger('netuno:modal:hide');
    modal.hide();
    for (i = j = 0, ref = netuno.modal.stack.length; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {
      if (netuno.modal.stack[i] === modal) {
        netuno.modal.stack.splice(i, 1);
      }
    }
    if (netuno.modal.stack.length === 0) {
      $('#netuno-modal-curtain').fadeOut();
      $('#netuno-modal-close').hide();
    }
    return modal.trigger('netuno:modal:hidden');
  };

  netuno.modal.hideLast = function() {
    if (netuno.modal.stack.length > 0) {
      return netuno.modal.hide(netuno.modal.stack[netuno.modal.stack.length - 1]);
    }
  };

  netuno.com = {};

  netuno.com['text'] = {
    'html': {
      'load': function(id, css) {
        return tinymce.init({
          selector: `textarea\#${id}`,
          content_css: css,
          theme: 'modern'
        });
      }
    }
  };

  netuno.com['select'] = {
    callbacks: [],
    getConfig: function(fieldId, service, ajaxParams) {
      var delayCallbacks;
      netuno.com.select.loadCallbacksForFieldId(fieldId);
      delayCallbacks = new Date().getTime();
      return {
        //field = $("\##{ fieldId }")
        // dropdownParent: field.parent()
        theme: "bootstrap4",
        placeholder: netuno.config.com.lang.select["defaulttext"],
        allowClear: true,
        data: [
          {
            id: '',
            text: ''
          }
        ],
        ajax: {
          url: service,
          dataType: 'json',
          delay: 250,
          data: function(params) {
            return $.extend(true, {
              q: params.term,
              page: params.page,
              page_limit: 10
            }, ajaxParams);
          },
          processResults: function(data, params) {
            if (params.page != null) {
              params.page = 1;
            }
            return {
              results: data
            };
          }
        },
        templateResult: function(item) {
          return item.label;
        },
        templateSelection: function(item) {
          var callback, key;
          if (new Date().getTime() < delayCallbacks + 250) {
            return item.label;
          }
          for (key in netuno.com.select.callbacks[fieldId]) {
            callback = netuno.com.select.callbacks[fieldId][key];
            if ($.isFunction(callback)) {
              callback(item.id);
              delayCallbacks = new Date().getTime();
            }
          }
          return item.label;
        },
        escapeMarkup: function(m) {
          return m;
        }
      };
    },
    callbackForFieldId: function(fieldId, key, callback) {
      netuno.com.select.loadCallbacksForFieldId(fieldId);
      return netuno.com.select.callbacks[fieldId][key] = callback;
    },
    loadCallbacksForFieldId: function(fieldId) {
      if ((fieldId != null) && fieldId.length > 0 && (netuno.com.select.callbacks[fieldId] == null)) {
        return netuno.com.select.callbacks[fieldId] = {};
      }
    },
    load: function(fieldId, comUid, service) {
      return $(`\#${fieldId}`).select2(netuno.com.select.getConfig(fieldId, service, {
        com_uid: comUid
      }));
    },
    loadInContainer: function(container) {
      container.find("select[netuno-select-uid]").each(function() {
        var comUid, option, select, select2, service, value;
        select = $(this);
        select.select2('destroy');
        value = select.attr('value');
        comUid = select.attr('netuno-select-uid');
        service = select.attr('netuno-select-service');
        if ((comUid != null) && comUid !== '') {
          select2 = select.select2(netuno.com.select.getConfig(select.attr('id'), service, {
            com_uid: comUid
          }));
          if ((value != null) && value !== '') {
            option = $('<option selected>Loading...</option>').val(value);
            select.append(option);
            select.trigger('change');
            return $.ajax({
              dataType: "jsonp",
              url: `${service}?com_uid=${comUid}&data_uid=${value}`
            }).then(function(data) {
              var selectContainer, selectId;
              if ((data != null) && (data.label != null) && (data.id != null)) {
                option.html(data.label).val(data.id);
                option.removeData();
                select.trigger('change');
                selectId = select.attr('id');
                selectContainer = $(`\#select2-${selectId}-container`);
                selectContainer.html(data.label);
                selectContainer.prepend($(document.createElement("span")).addClass('select2-selection__clear').text('×').data(data).on('click', function() {
                  $(`\#${selectId}`).val('');
                  return $(this).parent().empty();
                }));
                return selectContainer.find('.select2-selection__clear').data(data);
              }
            });
          }
        }
      });
      container.find("select[netuno-select-link]").each(function() {
        var columnSeparator, link, maxColumnLength, onlyActives, service;
        link = $(this).attr('netuno-select-link');
        columnSeparator = $(this).attr('netuno-select-column-separator');
        maxColumnLength = $(this).attr('netuno-select-max-column-length');
        onlyActives = $(this).attr('netuno-select-only-actives');
        service = $(this).attr('netuno-select-service');
        if ((link != null) && link !== '') {
          return $(this).select2(netuno.com.select.getConfig($(this).attr('id'), service, {
            link: link,
            column_separator: columnSeparator,
            max_column_length: maxColumnLength,
            only_actives: onlyActives
          }));
        }
      });
      return container.find("select[netuno-select-service]:not([netuno-select-uid],[netuno-select-link])").each(function() {
        var option, select, select2, service, value;
        service = $(this).attr('netuno-select-service');
        if ((service != null) && service !== '') {
          select = $(this);
          select.select2('destroy');
          value = select.attr('value');
          service = select.attr('netuno-select-service');
          select2 = $(this).select2(netuno.com.select.getConfig($(this).attr('id'), service));
          if ((value != null) && value !== '') {
            option = $('<option selected>Loading...</option>').val(value);
            select.append(option).trigger('change');
            return $.ajax({
              dataType: "jsonp",
              url: `${service}&data_uid=${value}`
            }).then(function(data) {
              var selectContainer, selectId;
              if ((data != null) && (data.label != null) && (data.id != null)) {
                option.html(data.label).val(data.id);
                option.removeData();
                select.trigger('change');
                selectId = select.attr('id');
                selectContainer = $(`\#select2-${selectId}-container`);
                selectContainer.html(data.label);
                selectContainer.prepend($(document.createElement("span")).addClass('select2-selection__clear').text('×').data(data).on('click', function() {
                  $(`\#${selectId}`).val('');
                  return $(this).parent().empty();
                }));
                return selectContainer.find('.select2-selection__clear').data(data);
              }
            });
          }
        }
      });
    },
    setValue: function(select, uid) {
      select.empty().append($('<option></option>')).append($('<option selected></option>').val(uid)).val(uid).attr('value', uid);
      return netuno.com.select.loadInContainer(select.parent());
    }
  };

  netuno.com['date'] = {
    load: function(fieldId, container, callback) {
      return $(`\#${fieldId}`).on('change', callback).datepicker({
        format: "yyyy-mm-dd",
        autoclose: true,
        todayHighlight: true,
        orientation: "top auto",
        container: `\#${container}`
      });
    }
  };

  netuno.com['time'] = {
    load: function(fieldId, container, callback) {
      var control;
      control = $(`\#${fieldId}`).on('change', callback).clockpicker({
        autoclose: true,
        placement: 'top'
      });
      return control;
    }
  };

  netuno.com['checkbox'] = {
    loadInContainer: function(container) {}
  };

  netuno.com['color'] = {
    load: function(fieldId) {
      var control;
      control = $(`\#${fieldId}`).colorpicker();
      return control;
    }
  };

  netuno.com['image'] = {
    load: function(id) {
      var value;
      if ($(`\#${id}-view`).length === 0) {
        $('body').append($(`<div id="\#${id}-view" style="display: none;"></div>`));
      }
      if ($(`\#${id}-value`).val().length > 0) {
        return value = $(`\#${id}-value`).val();
      } else {
        return $(`\#${id}-btView`).hide();
      }
    },
    view: function(id, url) {
      return window.open(url, "_blank");
    },
    clear: function(id) {
      $(`\#${id}`).val('');
      $(`\#${id}-fileFeedback`).html('');
      $(`\#${id}-null`).val('true');
      $(`\#${id}-preview`).hide();
      return $(`\#${id}-btView`).hide();
    }
  };

  netuno.com['file'] = {
    load: function(id) {
      if ($(`\#${id}-value`).val().length === 0) {
        return $(`\#${id}-btView`).hide();
      }
    },
    view: function(id) {
      var value;
      value = $(`\#${id}-value`);
      return window.open(value.attr('file-url'));
    },
    clear: function(id) {
      $(`\#${id}`).val('');
      $(`\#${id}-fileFeedback`).html('');
      $(`\#${id}-null`).val('true');
      return $(`\#${id}-btView`).hide();
    },
    restore: function(id) {}
  };

  $(document).ready(function() {
    netuno.pageLoaded();
    if (window.innerWidth < 768) {
      $('#sidebarToggle').trigger('click');
    }
    netuno.addContentLoad(function(container) {
      return netuno.com['select'].loadInContainer(container);
    });
    netuno.addContentLoad(function(container) {
      return netuno.com['checkbox'].loadInContainer(container);
    });
    netuno.keepAlive();
    $(document).on('show.bs.modal', function(event) {
      var parents, target;
      target = $(event.target);
      parents = target.parents('.modal');
      if (parents.length > 0) {
        target.detach().appendTo('body').attr('netuno-parent-modal-id', $(parents[0]).attr('id'));
        return $(parents[0]).modal('hide');
      }
    });
    return $(document).on('hidden.bs.modal', function(event) {
      var target;
      target = $(event.target);
      if (target.attr('netuno-parent-modal-id')) {
        target.detach().appendTo(`\#${target.attr('netuno-parent-modal-id')}`);
        return $(`\#${target.attr('netuno-parent-modal-id')}`).modal('show');
      }
    });
  });

  //$(event.relatedTarget).parents('.modal')
//$(event.relatedTarget).parents('.modal').modal('hide')
//$(document).on 'shown.bs.modal', (event) ->
//  if ($('body').hasClass('modal-open') == false)
//    $('body').addClass('modal-open')

}).call(this);

//# sourceMappingURL=core.js.map
